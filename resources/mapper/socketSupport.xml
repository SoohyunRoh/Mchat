<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="socketSupport">
	<resultMap id="resultSimpleFriendList" type = "HashMap">
		<result javaType="java.lang.String" column = "FPID" property = "fpid"/>
		<result javaType="java.lang.String" column = "RELATION" property = "relation"/>
	</resultMap>
	<resultMap id = "resultSingleFriendInfo" type = "HashMap">
		<result javaType="java.lang.String" column = "PID" property = "pid"/>
		<result javaType="java.lang.String" column = "NAME" property = "name"/>
		<result javaType="java.lang.String" column = "FDIGIT" property = "fDigit"/>
		<result javaType="java.lang.String" column = "STATUS" property = "status"/>
		<result javaType="java.lang.String" column = "STATUS_MESSAGE" property = "statusMessage"/>
		<result javaType="java.lang.String" column = "RELATION" property = "block"/>
		<result javaType="java.lang.String" column = "NEW_FRIEND" property = "newFriend"/>
		<result javaType="java.lang.String" column = "CHAT_ID" property = "chatId"/>
		<result javaType="java.lang.String" column = "PORTRAIT_FILE" property = "portraitFile"/> 
	</resultMap>
	<resultMap id="resultGetSimpleMyInfo" type = "HashMap">
		<result javaType="java.lang.String" column = "PID" property = "pid"/>
		<result javaType="java.lang.String" column = "NAME" property = "name"/>
		<result javaType="java.lang.String" column = "FDIGIT" property = "fDigit"/>
	</resultMap>
	
	<update id="updateUserStatus" parameterType="HashMap">
		UPDATE	USER U SET
				U.STATUS = #{status}
		WHERE	U.PID = #{pid}
	</update>
	<update id="updateUserStatusMessage" parameterType="HashMap">
		UPDATE	USER U SET
				U.STATUS_MESSAGE = #{message}
		WHERE	U.PID = #{pid}
	</update>
	<insert id="insertPortrait" parameterType="HashMap">
		INSERT	INTO PORTRAIT VALUES (
				null,
				#{pid},
				#{utime},
				#{exe}
		)
	</insert>
	<update id="updateFriendRelation" parameterType="HashMap">
		UPDATE	FRIEND F SET
				F.RELATION = #{relation}
		WHERE	F.PID = #{pid}
		AND		F.FPID = #{fpid}
	</update>
	
	<select id="getSimpleFriendList" parameterType="java.lang.String" resultMap="resultSimpleFriendList">
		SELECT	F.FPID,
				F.RELATION
		FROM	FRIEND F
		WHERE	F.PID = #{pid}
		AND		F.RELATION != '9'
	</select>
	
	<select id="getSingleFriendInfo" parameterType="HashMap" resultMap="resultSingleFriendInfo">
		SELECT	U.PID,
				U.NAME,
				U.FDIGIT,
				U.STATUS,
				U.STATUS_MESSAGE,
				F.RELATION,
				CASE WHEN TO_DAYS(NOW()) - TO_DAYS(F.REG_DATE) <![CDATA[<=]]> 7 THEN 'Y' ELSE 'N' END NEWFRIEND,
				F.CHAT_ID,
				(	SELECT	CONCAT(IP.PID, IP.UTIME, '.', IP.EXE)
					FROM	PORTRAIT IP
					WHERE	IP.PID = U.PID
					AND		IP.SEQ = (	SELECT	MAX(IIP.SEQ) 
										FROM	PORTRAIT IIP 
										WHERE	IIP.PID = IP.PID
									 )
				) PORTRAIT_FILE
		FROM	FRIEND F JOIN USER U ON F.FPID = U.PID
		WHERE	F.PID = #{pid}
		AND		F.FPID = #{fpid}
	</select>
	
	<select id="getFriendRequestStatus" parameterType="HashMap" resultType="java.lang.String">
		SELECT 	COUNT(*) CNT
		FROM	FRIEND_REQ F
		WHERE	F.PID = #{pid}
		AND		F.REQUEST_PID = #{fpid} 
	</select>
	
	<insert id="insertFriendRequest" parameterType="HashMap">
		INSERT INTO FRIEND_REQ VALUES (
			null, 
			#{pid},
			#{fpid},
			#{status},
			now()
		)
	</insert>
	
	<update id="updateFriendRequest" parameterType="HashMap">
		UPDATE 	FRIEND_REQ F SET
				F.STATUS = #{status}
		WHERE	F.PID = #{pid}
		AND		F.REQUEST_PID = #{fpid}
	</update>
	
	<select id="getSimpleMyInfo" parameterType="java.lang.String" resultMap="resultGetSimpleMyInfo">
		SELECT	U.PID,
				U.NAME,
				U.FDIGIT
		FROM	USER U
		WHERE	U.PID = #{pid}
	</select>
	
	<insert id="insertFriend" parameterType="HashMap">
		<selectKey resultType="java.lang.String" keyProperty="chatId" order="BEFORE">
			SELECT	IFNULL(MAX(F.CHAT_ID) + 1, 1)
			FROM	FRIEND F
 		</selectKey>
		INSERT	INTO FRIEND VALUES 
		<foreach collection = "friendArray" item="item" separator=",">
			(
				null,
				#{item.pid},
				#{item.fpid},
				'1',
				#{chatId},
				now()
			)
		</foreach>
	</insert>
	<!-- 
	<select id="getChatID" parameterType="HashMap" resultType="java.lang.String">
		SELECT	IFNULL(F.CHAT_ID, 0);
		FROM	FRIEND F
		WHERE	F.PID = #{pid}
		AND		F.FPID = #{fpid}
	</select>
	-->
	<insert id="insertChatMessage" parameterType="HashMap">
		INSERT INTO	CHAT_HISTORY VALUES (
			null,
			#{chatId},
			#{pid},
			#{message},
			'Y',
			now()
		)
		<selectKey resultType="java.lang.String" keyProperty="chatSeq" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<update id="updateNewMessageStatus" parameterType="java.lang.String">
		UPDATE	CHAT_HISTORY C SET
				C.NEWMESSAGE = 'N'
		WHERE 	CHAT_SEQ = #{seq}
	</update>
</mapper>
